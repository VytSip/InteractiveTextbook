@model InteractiveTextbook.Data.Entities.Page

@{
    ViewData["Title"] = "Textbook";
}

<h1>@Model.Textbook.Name</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PageNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PageNumber)
        </dd>
        <dd class = "col-sm-10">
            @Html.Raw(Model.Text)
        </dd>
    </dl>
</div>
<div>
    <a onclick="StopTimer()" href="#" class="btn btn-primary" id="StopTimerButton">Stop timer</a>
    @Html.ActionLink("Previous page", "Textbook", new { textBookId = Model.TextbookId, pageNumber = Model.PageNumber - 1 }) |
    @Html.ActionLink("Next page", "Textbook", new { textBookId = Model.TextbookId, pageNumber = Model.PageNumber + 1 })
</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    function StopTimer() {
        $.ajax({
            //type: "GET",
            url: "@Url.Action("StopTimer")",
            data: { id: @Model.Id},
            //dataType: "text",
            success: function (msg) {
                console.log(msg);
            },
            error: function (req, status, error) {
                console.log(msg);
            }
        });
        var button = document.getElementById("StopTimerButton");
        button.classList.remove("btn-primary");
        button.classList.add("disabled");
    };
    $(document).ready(function () {
        $.ajax({
            //type: "GET",
            url: "@Url.Action("PlayMusic")",
            data: { id: @Model.Id},
            //dataType: "text",
            success: function (msg) {
                console.log(msg);
            },
            error: function (req, status, error) {
                console.log(msg);
            }
        });
    });

</script>
